((def-persp nil ((def-buffer "home.clj" "/Users/leonardtruong/dev/azumi/azumi_clj/src/azumi_clj/routes/home.clj" clojure-mode) (def-buffer "about.html" "/Users/leonardtruong/dev/azumi/azumi_clj/resources/templates/about.html" html-mode) (def-buffer "auth.clj" "/Users/leonardtruong/dev/azumi/azumi_clj/src/azumi_clj/routes/auth.clj" clojure-mode) (def-buffer "profile.html" "/Users/leonardtruong/dev/azumi/azumi_clj/resources/templates/profile.html" html-mode) (def-buffer "handler.clj" "/Users/leonardtruong/dev/azumi/azumi_clj/src/azumi_clj/handler.clj" clojure-mode) (def-buffer "core.clj" "/Users/leonardtruong/dev/azumi/azumi_clj/src/azumi_clj/core.clj" clojure-mode) (def-buffer "schema.clj" "/Users/leonardtruong/dev/azumi/azumi_clj/src/azumi_clj/db/schema.clj" clojure-mode) (def-buffer "project.clj" "/Users/leonardtruong/dev/azumi/azumi_clj/project.clj" clojure-mode) (def-buffer "azumi_clj" nil dired-mode) (def-buffer "init.el" "/Users/leonardtruong/.emacs.d/init.el" emacs-lisp-mode) (def-buffer "merge.py" "/Users/leonardtruong/dev/aspire/ctree/ctree/meta/merge.py" python-mode) (def-buffer "test_core.py" "/Users/leonardtruong/dev/aspire/ctree/tests/test_meta/test_core.py" python-mode) (def-buffer "basic_blocks.py" "/Users/leonardtruong/dev/aspire/ctree/ctree/meta/basic_blocks.py" python-mode)) (def-wconf nil) (def-params nil)) (def-persp "194" nil (def-wconf nil) (def-params nil)) (def-persp "azumi" nil (def-wconf nil) (def-params nil)) (def-persp "ctree" ((def-buffer "basic_blocks.py" "/Users/leonardtruong/dev/aspire/ctree/ctree/meta/basic_blocks.py" python-mode) (def-buffer "merge.py" "/Users/leonardtruong/dev/aspire/ctree/ctree/meta/merge.py" python-mode) (def-buffer "test_core.py" "/Users/leonardtruong/dev/aspire/ctree/tests/test_meta/test_core.py" python-mode)) (def-wconf nil) (def-params nil)) (def-persp "Command attempted to use minibuffer while in minibuffer" nil (def-wconf nil) (def-params nil)) (def-persp "config" ((def-buffer "init.el" "/Users/leonardtruong/.emacs.d/init.el" emacs-lisp-mode)) (def-wconf nil) (def-params nil)))
